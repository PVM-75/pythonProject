import tkinter as tk
from tkinter import messagebox


def vigenere_encrypt(plaintext, key):
    encrypted_text = ""
    key_length = len(key)

    for i, char in enumerate(plaintext):
        if char.isalpha():
            shift = ord(key[i % key_length].lower()) - ord('a')
            new_char = chr((ord(char.lower()) - ord('a') + shift) % 26 + ord('a')).upper() if char.isupper() else chr(
                (ord(char) - ord('a') + shift) % 26 + ord('a'))
            encrypted_text += new_char
        else:
            encrypted_text += char
    return encrypted_text


def vigenere_decrypt(ciphertext, key):
    decrypted_text = ""
    key_length = len(key)

    for i, char in enumerate(ciphertext):
        if char.isalpha():
            shift = ord(key[i % key_length].lower()) - ord('a')
            new_char = chr(
                (ord(char.lower()) - ord('a') - shift + 26) % 26 + ord('a')).upper() if char.isupper() else chr(
                (ord(char) - ord('a') - shift + 26) % 26 + ord('a'))
            decrypted_text += new_char
        else:
            decrypted_text += char
    return decrypted_text


def encrypt_message():
    plaintext = input_text.get("1.0", tk.END).strip()
    key = key_entry.get().strip()

    if not plaintext or not key:
        messagebox.showwarning("Предупреждение", "Введите текст и ключ.")
        return

    encrypted_message = vigenere_encrypt(plaintext, key)
    output_text.delete("1.0", tk.END)
    output_text.insert(tk.END, encrypted_message)


def decrypt_message():
    ciphertext = input_text.get("1.0", tk.END).strip()  # Используем ввод из первого поля
    key = key_entry.get().strip()

    if not ciphertext or not key:
        messagebox.showwarning("Предупреждение", "Введите шифрованное сообщение и ключ.")
        return

    decrypted_message = vigenere_decrypt(ciphertext, key)
    output_text.delete("1.0", tk.END)
    output_text.insert(tk.END, decrypted_message)


# Создание окна
root = tk.Tk()
root.title("Шифровщик Виженера")

# Ввод текста
tk.Label(root, text="Введите текст (или зашифрованное сообщение):").pack()
input_text = tk.Text(root, height=10, width=50)
input_text.pack()

# Ввод ключа
tk.Label(root, text="Введите ключ:").pack()
key_entry = tk.Entry(root, width=50)
key_entry.pack()

# Кнопки для шифрования и дешифрования
encrypt_button = tk.Button(root, text="Зашифровать", command=encrypt_message)
encrypt_button.pack()

decrypt_button = tk.Button(root, text="Расшифровать", command=decrypt_message)
decrypt_button.pack()

# Вывод результата
tk.Label(root, text="Результат:").pack()
output_text = tk.Text(root, height=10, width=50)
output_text.pack()

# Запуск основного цикла
root.mainloop()
